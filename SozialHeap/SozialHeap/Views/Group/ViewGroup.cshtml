@model Sozialheap.Models.ViewModels.SingleGroupView

@{
    ViewBag.Title = Html.DisplayFor(modelItem => Model.group.groupName);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <!-- group profile starts -->
    <div class="col-sm-6">
        <div class="panel panel-primary group">

            <div class="panel-heading">
                <h3 id="panel-title" class="panel-title">

                    @Html.DisplayFor(modelItem => Model.group.groupName)

                </h3>
            </div>

            <div class="panel-body">
                <div class="end"></div>

                <div class="textholder post profile">
                    <div class="imgholder">
                        @if(Model.group.photo != null)
                        {
                            <img src="@Model.group.photo" alt="Group photo"/>
                        }
                        else
                        {
                            <img src="~/images/Group.png" alt="Group photo"/>
                        }
                    </div>
                    <div class="authorinfo">
                        <h4>Group owner: @Html.DisplayFor(modelItem => Model.group.User.userName)</h4>
                        <div class="authorscore">
                            <span class="badge">
                                <span class="glyphicon glyphicon-console">
                                </span> @Html.DisplayFor(modelItem => Model.group.User.score)
                            </span>
                        </div>
                        <!-- author score ends -->
                    </div>
                    <div class="end"></div>

                    <div class="description">@Html.DisplayFor(modelItem => Model.group.description)</div>
                    <div class="end"></div>
                    <div class="row" style="">
                        <div class="buttonLeftCol">
                            @if (User.Identity.IsAuthenticated)
                            {
                                 <script>
                                        function removeUserFromTopFollowers()
                                        {
                                            var name = '/User/ViewUser/' + '@System.Web.HttpContext.Current.User.Identity.Name';
                                            $(".panel-body .topitem").each(function (index) {
                                                $(this).children('a[href="'+name+'"]').parent().remove();
                                            });
                                        }
                                        

                                        function addUserToTopFollowers() {
                                            var currentscore = @Model.currentUser.score;
                                            var name = '@Model.currentUser.userName';
                                            var hasbeen = false;
                                            $("#topfollowers .topitem").each(function (index) {
                                                var userscore = parseInt($(this).find("span.badge").text());
                                                if (currentscore >= userscore && hasbeen == false)
                                                {
                                                    $text = '<div class="topitem postquestion"><a href="/User/ViewUser/'+name+'"> <span class="makedivlink makedivlink_small"></span></a><div class="imgholder"><img src="@Model.currentUser.photo" alt="User photo" /></div><div class="authorscore userScore">    <span class="badge"><span class="glyphicon glyphicon-console"> </span> '+currentscore+' </span> </div><h4 class="userName">'+name+'</div>';
                                                    $(this).before($text);
                                                    hasbeen = true;
                                                }
                                            });
                                            while ($("#topfollowers .topitem").length > 5)
                                            {
                                                $("#topfollowers .topitem").last().remove();
                                            }
                                        }

                                        function stopfollow(id, elem)
                                        {
                                            $.get("/Group/StopFollowingAjax/" + id, function (data, status) {
                                                if (data === "unfollowed") {
                                                    var follow = parseInt($(elem).closest('.panel-primary.group').find('.followercount').text()) - 1;
                                                    $(elem).closest('.panel-primary.group').find('.followercount').text(follow);
                                                    $(elem).replaceWith('<a class="btn user notfollowing" style="width: 100px;" href="/Group/StartFollowing/'+id+'" onclick="follow(\''+id+'\',this); return false;"><span class="glyphicon glyphicon-plus"></span> Follow</a>')
                                                    startNotFollowed();
                                                    removeUserFromTopFollowers();

                                                }
                                            });
                                        }
                                        function follow(id, elem)
                                        {
                                            $.get("/Group/StartFollowingAjax/" + id, function (data, status) {

                                                if (data === "followed") {
                                                    var follow = parseInt($(elem).closest('.panel-primary.group').find('.followercount').text()) + 1;
                                                    $(elem).closest('.panel-primary.group').find('.followercount').text(follow);
                                                    $(elem).replaceWith('<a class="btn user followed" style="width: 100px;" href="/Group/StopFollowing/' + id + '" onclick="stopfollow(\'' + id + '\',this); return false;"><span class="glyphicon glyphicon-ok"></span> Following</a>')
                                                    startFollowed();
                                                    addUserToTopFollowers();

                                                }
                                            });
                                        }

                                    </script>
                                if (ViewBag.isOwner == true)
                                {
                                    <a href="#editGroup" class="btn btn-default" data-toggle="modal">Edit group</a>
                                }
                                else
                                {
                                    if (Model.following)
                                    {
                                        <a class="btn group followed" style="width: 100px;" href="@Url.Action("StopFollowing/"+Model.group.groupID)" onclick="stopfollow('@Model.group.groupID',this); return false;">
                                            <span class="glyphicon glyphicon-ok"> </span> Following
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn group notfollowing" style="width: 100px;" href="@Url.Action("StartFollowing/"+Model.group.groupID)" onclick="follow('@Model.group.groupID',this); return false;">
                                            <span class="glyphicon glyphicon-plus"></span> Follow
                                        </a>

                                    }
                                }
                            }

                        </div>
                        <div  class="buttonRightCol">

                            <div class="buttons">
                                <a class="btn btn-default" href="@Url.Action("ViewUsers/" + Model.group.groupID)" >Followers <span class="badge"> @Html.DisplayFor(modelItem => Model.group.Users.Count)</span></a>
                            </div>
                        </div>
                    </div>
                    <div class="end"></div>
                </div>
            </div>
            <div class="end"></div>


        </div>
    </div>
    
    <!-- group profile ends -->


    <!-- Top Users starts -->
    <div class="col-sm-6">
        <div class="panel panel-primary user">

            <div class="panel-heading">
                <h3 id="panel-title" class="panel-title">

                    Top Users

                </h3>
            </div>
            <div class="panel-body">
                @if (Model.group.Users.Count() == 0)
                {
                    <div class="nofriends">
                        Group @Html.DisplayFor(modelItem => Model.group.groupName) has currently no followers
                    </div>

                }
                @foreach (var item in Model.group.Users)
                {
                    <div class="topitem postquestion">
                        <a href="@Url.Action("ViewUser/" + @item.userName, "User")">
                            <span class="makedivlink makedivlink_small"></span>
                         </a>
                            <div class="imgholder">
                                <a href="@Url.Action("ViewUser/" + @item.userName, "User")">
                                    @if (item.photo != null)
                                    {
                                        <img src="@item.photo" alt="User photo" />
                                    }
                                    else
                                    {
                                        <img src="~/images/anonymous_user.png" alt="User photo"/>
                                    }
                                    
                                </a>

                            </div>
                            <a href="@Url.Action("ViewUser/" + @item.userName, "User")">
                                <div class="authorscore userScore">
                                    <span class="badge">
                                        <span class="glyphicon glyphicon-console">
                                        </span> @item.score
                                    </span>
                                </div>
                                <h4 class="userName">@item.userName</h4><br />
                            </a>
</div>
                }

            </div>
        </div>
        <!-- Top Users ends -->
    </div>
    <div class="end"></div>
    <div class="row">
        @if (User.Identity.IsAuthenticated)
        {
        <div class="col-sm-12">
            <a href="#createPost" class="btn questionbutton" data-toggle="modal">Post a new question</a>
        </div>  
        }     
        </div>
    <div class="row">
        <!-- Top Question starts -->
        <div class="col-sm-12">
            <div class="panel panel-primary question">

                <div class="panel-heading">
                    <h3 id="panel-title" class="panel-title">

                        Recent questions

                    </h3>
                </div>
                <div class="panel-body">
                    
                    @if (Model.postList != null)
                    {
                        if (Model.postList.Count() == 0)
                        {
                        <div class="nofriends">
                            Group @Html.DisplayFor(modelItem => Model.group.groupName) has currently no questions
                        </div>

                        }
                        foreach (var item in Model.postList)
                        {
                            <div class="topitem postquestion">
                                <div class="imgholder">
                                    <img src="~/images/question.png" alt="Question photo"/>
                                </div>
                                <div class="textholder" style="overflow: hidden; height: 60px;">
                                    <h4>@item.name</h4> <span class="notimportant">posted by </span>
                                    @Html.ActionLink(item.User.userName, "ViewUser/" + item.User.userName, "User")
                                    <br />
                                   
                                    @item.body
                                </div>
                                <a href="@Url.Action("ViewQuestion/" + @item.postID, "Question")">
                                    <span class="makedivlink"></span>
                                </a>
                            </div>
                    <!-- end example -->
                        }
                    }

                </div>
            </div>
        </div>
        <!-- Top Question ends -->

    </div>
</div>

<!-- Modal window for new posts -->

@Html.Partial("_CreatePost")
@if (ViewBag.isOwner == true)
{
    @Html.Partial("_EditGroup");
}